{
    "docs": [
        {
            "location": "/", 
            "text": "7-CONNECT Merchant Integration Guide\n\n\nCopyright 2011, Philippine Seven Corporation and affiliates. All rights reserved.\n\n\nThe information contained in this document is confidential and intended for merchants who will be integrating to the 7-CONNECT gateway. Copying and distribution of this document to unauthorized parties is prohibited.\n\n\nThe information contained herein is subject to change without notice and is not warranted to be error-free. If you find any errors, please report them to us in writing.\n\n\nI. Overview\n\n\nWelcome to the 7-CONNECT Merchant Integration Guide.\n\n\n7-CONNECT is 7-Eleven's platform for e-commerce businesses that enables cash payment convenience for your customers. Customers will be able to pay for online purchases at any 7-Eleven store.\n\n\n7-CONNECT features the following:\n\n\n\n\n24/7 cash payment at all 7-Eleven stores\n\n\nIncreases your market beyond credit card holders\n\n\nEasier and faster than bank deposits\n\n\nZero risk of fraud and chargebacks\n\n\nReal time notification of payment to your transaction systems\n\n\n\n\nAs a merchant, you will have access to new customers who do not have credit cards or who refuse to use them online. This opens up opportunities for you. There are no chargebacks or fraud to worry about. All completed transactions are guaranteed to be remitted to you.\n\n\nII. Getting Started\n\n\nThis guide assumes you have a working knowledge of the following:\n\n\n\n\nHTTP and webservice concepts\n\n\nSHA-1 hashing\n\n\n\n\nIntegrating to 7-CONNECT will require development of two points:\n\n\n\n\n7-CONNECT Reference Request: You will need to request for a 7-CONNECT Reference which will be used by customers to pay at the store.\n\n\nMerchant Webhook: The 7-CONNECT gateway will call your URL to \nVALIDATE\n (optional) and \nCONFIRM\n (mandatory) a payment transaction.\n\n\n\n\nThese URLs will be used:\n\n\n\n\nFor Testing - \nhttps://testpay.cliqq.net/transact\n\n\nFor Live Production - \nhttps://pay.7-eleven.com.ph/transact\n\n\n\n\nFor graphic logos that you can use, jump to \nAssets\n\n\nIII. 7-CONNECT Web Services\n\n\nA. 7-CONNECT Reference\n\n\n7-CONNECT Reference is a 12-digit number issued by the 7-CONNECT gateway. This reference number will be presented at the store in order to transact customer's purchase under 7-CONNECT. You may use either a redirect page or an API request to obtain this reference number.\n\n\n1A. Creating a payment reference via redirect page\n\n\nAfter customer checks out and chooses 7-CONNECT as a payment option, merchant will send a request to generate a reference number. They will be then automatically redirected to the payment instruction page. This means that merchants don't have to create a payment instruction page.  The payment instruction page contains the transaction details and the 7-CONNECT reference number issued for the transaction.\n\n\nIllustration\n\n\n\n\nCustomer Experience\n\n\n\n\nCustomer selects \n7-CONNECT\n as Payment Mode in Checkout.\n\n\nMerchant Site redirects user to the 7-CONNECT REQUEST URL with the required parameters.\n\n\n7-CONNECT Gateway displays the following instruction page displaying the Merchant details and the 7-CONNECT Reference.\n\n\n\n\n\n\nAt this point, the Customer can:\n\n\n\n\na. Write down the 7-CONNECT Reference\n b. Print the page\n\n\n  \n Customer selects \nContinue Browsing\n.\n\n  \n 7-CONNECT Gateway redirects to the Merchant's Success URL.\n\n  \n Merchant Site displays the Order Confirmation page.\n\n \n\n\n\n\nRequest Parameters\n\n\nThe merchant site has to provide the 7-CONNECT Request URL with the parameters it requires to generate a 7-CONNECT Reference.  You will be provided with your own Merchant ID and Transaction Key after completing the merchant agreement.\n\n\nRequest Type: HTTP POST\nContent-Type: application/x-www-form-urlencoded \nParameters: query string\n\n\nRequest Type: HTTP GET\nParameters: query string\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmerchantID\n\n\nText (15)\n\n\nRequired\n\n\nMerchant's ID as provided by 7-CONNECT\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nRequired\n\n\nMerchant's Reference Number\n\n\n\n\n\n\namount\n\n\nNumber (12, 2)\n\n\nRequired\n\n\nTransaction amount.\nFormat: XXXXXXXXXX.XX\n\n\n\n\n\n\nexpDate\n\n\nText (14)\n\n\nOptional\n\n\nTransaction's expiration date/time.\nFormat: yyyyMMddHHmmss\nIf not specified, blank or malformed, the expiry date is set to the value defined in the merchant settings which is 2880 minutes.\n\n\n\n\n\n\nsuccessURL\n\n\nText (300)\n\n\nRequired\n\n\nThe page to which 7-CONNECT redirects to after the user clicks on the Continue Browsing button.\n\n\n\n\n\n\nfailURL\n\n\nText (300)\n\n\nRequired\n\n\nThe page to which 7-CONNECT redirects to after a failed transaction.\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nRequired\n\n\nTransaction Security Token\nTo create this, get the SHA-1 digest of:\nmerchantID + merchantRef + {transactionKey}\nPHP code:\n*$token = sha1($merchantID . $merchantRef . '{' . $transactionKey . '}');\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\ntransactionDescription\n\n\nText(3000)\n\n\nOptional\n\n\nWill be shown in the customer LCD screen and payment instruction page (max of 3000 characters)\n\n\n\n\n\n\nreceiptRemarks\n\n\nText(660)\n\n\nOptional\n\n\nWill be printed in the receipt (if none, defaults to {merchantID}\n{merchantRef}) (max of 660 characters). Use the \n characters to instruct a new line.  The width of the receipt is 32 characters. Excess characters in a line will be truncated in the receipt. \nExample:\n \"John Santos\n789 E. Rodriguez St.\nCall 777-7890 for questions\nExpected delivery date: 7/4/11\" \nThis will be rendered on the receipt as:\n John Santos 789 \nE. Rodriguez St.\nCall 777-7890 for questions\n Expected delivery date: 7/4/11\n\n\n\n\n\n\nemail\n\n\nText\n\n\nOptional\n\n\nUsed for notifications from 7-CONNECT to the customer. If not provided by the merchant, a button will appear in the instruction page to allow the customer to enter their email address.\n\n\n\n\n\n\nphone\n\n\nText\n\n\nOptional\n\n\nUsed for customer service. Format: \n09xxxxxxxxx\n\n\n\n\n\n\npayLoad\n\n\nText (3000)\n\n\nOptional for website only integration. \nRequired if service is available through CLiQQ\n\n\nThis field can be set to other relevant transaction information that will be passed to the merchant's postback URL (e.g. Account Number, Customer Contact Number, etc.).\nThis field is needed since the 7\u00adConnect reference number may be generated by another device. That device will generate the payLoad contents and the payLoad contents will then be passed to the merchant's postback URL upon transaction payment. \nIf merchant plans to integrate with CLiQQ, this will be \nREQUIRED.\n This will contain details of the transaction provided by the customer.\n\n\n\n\n\n\nreturnPaymentDetails\n\n\nText (1)\n\n\nOptional\n\n\nValue can either be Y or N or blank. If the value is Y, the gateway will include the paymentDetails when posting to the merchant postback URL when payment is made at the store.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSample Code\n\n\nThis php code will display a form asking for a merchant reference and amount. Submitting this will display the payment instruction page containing the 7-CONNECT Reference.\n\n\ntransact.php\n\n\n?php\n\nif (isset($\\_REQUEST['submit'])) {\n $merchantRef = $\\_REQUEST['merchantRef'];\n $amount = $\\_REQUEST['amount'];\n\n if (!is\\_numeric($amount)) {\n  $errormsg = \nInvalid amount.\n;\n }\n $transactURL = 'https://testpay.cliqq.net/transact';\n $inquireURL = 'https://testpay.cliqq.net/inquire';\n $transactionKey = '628e936f45884030ac1f34bcde9c28efa6ae9c839623b45b8942bd4490e1f05d';\n $merchantID = '7-Eleven';\n $successURL = $\\_SERVER['SERVER\\_NAME'];\n $failURL = $\\_SERVER['SERVER\\_NAME'];\n $token = sha1($merchantID . $merchantRef . '{' . $transactionKey . '}');\n\n //set variables\n $fields = array(\n\n    'merchantID'=\n$merchantID,\n    'merchantRef'=\n$merchantRef,\n    'amount'=\n$amount,\n    'successURL'=\n$successURL,\n    'failURL'=\n$failURL,\n    'token'=\n$token\n   );\n\n $params = http\\_build\\_query($fields);\n header(\nLocation: $transactURL?$params\n);\n}\n\nif (isset($error)) {\n echo \nInvalid Amount. Please enter again.\n;\n}\n?\n\n\n\nh1\n7-CONNECT Test Request\n/h1\n\n\nform method=\npost\n\n\ntable\n\n\ntr\n\n\ntd\nMerchant Reference:\n/td\n\n\ntd\ninput type=\ntext\n name=\nmerchantRef\n/td\n\n\n/tr\n\n\ntr\n\n\ntd\nAmount:\n/td\n\n\ntd\ninput type=\ntext\n name=\namount\n/td\n/tr\n\n\ntr\n\n\ntd\ninput type=\nsubmit\n name=\nsubmit\n value=\nSubmit to 7-CONNECT\n/td\n\n\n/tr\n\n\n/table\n\n\n/form\n\n\n\n\n\n\n\n1B. Creation of payment reference over a web service\n\n\nThis allows more control on how payment instruction is displayed to customers. Merchant will display the payment instructions that include the 7-CONNECT Reference Number. We recommend the following format:\n\n\n\n\nPayment instructions\n\n\n7-CONNECT REFERENCE: (human readable with hyphens xxxx-xxxx-xxxx)\n\n\nAmount:\n\n\nBarcode in Code 128A format (numeric only; strip away hyphens)\n\n\nExpiry:\n\n\nMerchant Name:\n\n\nMerchant Reference:\n\n\nTransaction Description:\n\n\n\n\nThis is a web service that receives an \nHTTP POST\n request and returns a JSON response. Sends the specified data in a POST request to the  HTTP server, in the same way that a browser does when a user has filled in an HTML form and presses the submit button. This will cause curl to pass the data to the server using the content-type application/x-www-form-urlencoded.\n\n\nRequest Parameters\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmerchantID\n\n\nText (15)\n\n\nRequired\n\n\nMerchant's ID as provided by 7-CONNECT\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nRequired\n\n\nMerchant's Reference Number\n\n\n\n\n\n\namount\n\n\nNumber (12, 2)\n\n\nRequired\n\n\nTransaction amount.\nFormat: XXXXXXXXXX.XX\n\n\n\n\n\n\nexpDate\n\n\nNumber (14)\n\n\nOptional\n\n\nTransaction's expiration date/time.\nFormat: yyyyMMddHHmmss\nIf not specified, blank or malformed, the expiry date is set to the value defined in the merchant settings which is 2880 minutes.\n\n\n\n\n\n\nsuccessURL\n\n\nText (300)\n\n\nRequired\n\n\nThe page to which 7-CONNECT redirects to after the user clicks on the Continue Browsing button.\n\n\n\n\n\n\nfailURL\n\n\nText (300)\n\n\nRequired\n\n\nThe page to which 7-CONNECT redirects to after a failed transaction.\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nRequired\n\n\nTransaction Security Token\nTo create this, get the SHA-1 digest of:\nmerchantID + merchantRef + {transactionKey}\nPHP code:\n$token = sha1($merchantID . $merchantRef . '{' . $transactionKey . '}');\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\ntransactionDescription\n\n\nText(3000)\n\n\nOptional\n\n\nWill be shown in the customer LCD screen and payment instruction page (max of 3000 characters)\n\n\n\n\n\n\nreceiptRemarks\n\n\nText(660)\n\n\nOptional\n\n\nWill be printed in the receipt (if none, defaults to {merchantID}\n{merchantRef} (max of 660 characters). Use the pipe character to instruct a new line.  The width of the receipt is 32 characters. Excess characters in a line will be truncated in the receipt. \nExample:\n \"John Santos\n789 E. Rodriguez St.\nCall 777-7890 for questions\nExpected delivery date: 7/4/11\" \nThis will be rendered on the receipt as:\n John Santos\n 789 E. Rodriguez St.\n Call 777-7890 for questions\n Expected delivery date: 7/4/11\n\n\n\n\n\n\nemail\n\n\nText\n\n\nOptional\n\n\nUsed for notifications from 7-CONNECT to the customer. If not provided by the merchant, a button will appear in the instruction page to allow the customer to enter their email address.\n\n\n\n\n\n\npayLoad\n\n\nText (3000)\n\n\nOptional for website only integration. \nRequired if service is available through CLiQQ\n\n\nThis field can be set to other relevant transaction information that will be passed to the merchant's postback URL (e.g. Account Number, Customer Contact Number, etc.).\nThis field is needed since the 7\u00adConnect reference number may be generated by another device. That device will generate the payLoad contents and the payLoad contents will then be passed to the merchant's postback URL upon transaction payment.\nIf merchant plans to integrate with CLiQQ, this will be \nREQUIRED.\n This will contain details of the transaction provided by the customer.\n\n\n\n\n\n\nreturnPaymentDetails\n\n\nText (1)\n\n\nOptional\n\n\nValue can either be Y or N or blank. If the value is Y, the gateway will include the paymentDetails when posting to the merchant postback URL when payment is made at the store.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmerchantID\n\n\nText (15)\n\n\nYes\n\n\nMerchant's ID as provided by 7-CONNECT\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nYes\n\n\nMerchant's Reference Number\n\n\n\n\n\n\namount\n\n\nNumber (12,2)\n\n\nYes\n\n\nTransaction amount.\nFormat: XXXXXXXXXX.XX\n\n\n\n\n\n\npayID\n\n\nText (20)\n\n\nYes\n\n\n7-CONNECT Reference generated by the gateway\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nYes\n\n\nTransaction Security Token\nTo create this, get the SHA-1 digest of:\nmerchantID+merchantRef+payID+{transactionKey}\nPHP code:\n$token = sha1($merchantID) . $merchantRef . $payID . '{'.$transactionKey . '}');\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\nmessage\n\n\nText\n\n\nNo\n\n\nError Message\n\n\n\n\n\n\n\n\nSample Code\n\n\nhttps://testpay.cliqq.net/v1/reference/\n\n\nINPUT: merchantID, merchantRef, amount, token and other optional fields in the document.\n\n\n-d \nmerchantID=ATI\n \\\n-d \nmerchantRef=6419705015\n \\\n-d \namount=100\n \\\n-d \ntoken=235a23122139152ff830aa7fa1a876a95d4e365b\n \\\n-d \nemail= [jpj@example.com](mailto:jpj@example.com)\n \\\n-d \nexpDate=20140730235959\n \\\n-d \nreceiptRemarks=ATI |^MerchRef: 6419705015\n \\\n-d \nreturnPaymentDetails=Return payment details here.\n \\\n-d \ntransactionDescription=Transaction description here.\n \\\n-d \npayLoad=payLoad.\n \\\n\n\n\n\nOUTPUT: payID, merchantID, merchantRef, amount, expiryDate, token, message\n\n\ncurl \\\n-d \nmerchantID=ATI\n \\\n-d \nmerchantRef=6419705015\n \\\n-d \namount=100\n \\\n-d \ntoken=235a23122139152ff830aa7fa1a876a95d4e365b\n \\\n-d \nemail= [jpjamon@gmail.com](mailto:jpjamon@gmail.com)\n \\\n-d \nexpDate=20140730235959\n \\\n-d \nreceiptRemarks=ATI |MerchRef: 6419705015\n \\\n-d \nreturnPaymentDetails=Return payment details here.\n \\\n-d \ntransactionDescription=Transaction description here.\n \\\n-d \npayLoad=payLoad.\n \\\n\n\n\n\nIV. Merchant Web Services (Webhooks)\n\n\nA. Handling Payments\n\n\nMerchants should prepare a Payment Handler to process payment postings that were paid at the store. When a POS payment event is triggered, we\u2019ll send a HTTP POST payload to the webhook\u2019s configured URL. Your Payment Handler will then proceed to fulfill the customer's order by updating transaction records or balances and sending a voucher or e-ticket by email or SMS to the customer.\n\n\n\n\n7-CONNECT requires its merchants to have the following web services:\n\n\nVALIDATE (mandatory)\n\n\nThis is used to verify the validity of a given Merchant Reference Number. Validate function can also be used for amount checking, account number validity, expiration checking, inventory availability and uptime inquiry.\n\n\nCONFIRM (mandatory)\n\n\nThis is used to confirm the payment for a given Merchant Reference Number. Once a confirm request was processed by the merchant, it should reject the other confirm request sent with the same sevenConnectId.\n\n\nCommunication will be done using \nHTTP POST\n\n\nRequest Parameters\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsevenConnectId\n\n\nText\n\n\nYes\n\n\nXXXX-XXXX-XXXX\n\n\n\n\n\n\ntype\n\n\nText\n\n\nYes\n\n\nValid values: VALIDATE, CONFIRM\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nYes\n\n\nMerchant's Reference Number\n\n\n\n\n\n\namount\n\n\nNumber (12, 2)\n\n\nYes\n\n\nTransaction Amount\nFormat: XXXXXXXXXX.XX\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nYes\n\n\nTransaction Security Token\nTo create this, get the SHA-1 digest of:\ntype +merchantID + merchantRef + {transactionKey}\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\npayLoad\n\n\nText (3000)\n\n\nOptional\n\n\nFor transactions originating from CLiQQ, there will be a JSON value in this parameter. See \nCLiQQ Appendix\n for details.\n\n\n\n\n\n\npaymentDetails\n\n\nText\n\n\nOptional\n\n\nMerchant will specify if they will require payment details. If 'N' or no value was passed to the parameter returnPaymentDetails during the 7\u00adConnect reference generation, then this parameter will not be passed to the postback URL.\nThis field is the JSON\u00adformatted string containing payment details formatted this way:\n{\"payID\":\"9913-0850-0305\", \"store\":\"0189\", \"pos\":\"1\", \"shift\":\"1\", \"bdate\":\"20130312000000\"}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nText\n\n\nYes\n\n\nValid values: VALIDATE, CONFIRM\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nYes\n\n\nMerchant's Reference Number\n\n\n\n\n\n\namount\n\n\nNumber (12, 2)\n\n\nYes\n\n\nTransaction Amount\nFormat: XXXXXXXXXX.XX\n\n\n\n\n\n\nauthCode\n\n\nText (20)\n\n\nYes for Confirm\nNo for Validate\n\n\nMerchant-system-generated Authorization Code\n\n\n\n\n\n\nresponseCode\n\n\nText (12)\n\n\nYes\n\n\nValid values: SUCCESS, DECLINED\n\n\n\n\n\n\nresponseDesc\n\n\nText (40)\n\n\nNo\n\n\nDetails for the success or declined transaction.\n\n\n\n\n\n\nremarks\n\n\nText (160)\n\n\nNo\n\n\nAny remarks from the Merchant.  This will be printed on the receipt.\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nYes\n\n\nTransaction Security Token\nTo create this for \nVALIDATE\n call, get the SHA-1 digest of:\ntype + merchantID + merchantRef + responseCode + {transactionKey}\nTo create this for \nCONFIRM\n call, get the SHA-1 digest of:\ntype + merchantID + merchantRef + authCode + responseCode + {transactionKey}\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe format is :\n\n\n?type=CONFIRM\nmerchantID=merchantID_value\nmerchantRef=merchantRef_value\namount=amount_value\nauthCode=authCode_value\nresponseCode=responseCode_value\nresponseDesc=responseDesc_value\ntoken=token_value\n\n\n\n\nSamples are :\n\n\nFor DECLINED :\n\n\n?type=CONFIRM\nmerchantRef=\namount=\nauthCode=\nresponseCode=DECLINED\nresponseDesc=DONT LEAVE ANY FIELDS BLANK\ntoken=fe1047606531ebdbe00d1786c80c3ca7e54ce79a\n\n\n\n\nFor SUCCESS :\n\n\n?type=CONFIRM\nmerchantRef=testmerchant01\namount=2500\nauthCode=1040249589\nresponseCode=SUCCESS\nresponseDesc=SUCCESSFUL\ntoken=7a1b6c2212e92b2ba1a2ba2d7db4031a93086d0c\n\n\n\n\nSample Code\n\n\nThe following php code implements the merchant service that will handle VALIDATE and CONFIRM instructions coming from the 7-CONNECT gateway.\n\n\n?php\n\n/* This is the verification service that listens to payment transactions from the gateway. */\n\nif (isset($\\_REQUEST['type'])) {\n $transactiontype = $\\_REQUEST['type'];\n $merchantRef = $\\_REQUEST['merchantRef'];\n $amount = $\\_REQUEST['amount'];\n $token = $\\_REQUEST['token'];\n\n // Check if token is valid\n // Replace merchantID with your merchant ID\n $transactionKey = '7ede208b7f8a58573057e7dde57fe8f3969fe0b2c32149c36b8c29ae9f744274';\n $merchantID = 'TestMerchant01';\n $validtoken = sha1($transactiontype . $merchantID . $merchantRef . '{' . $transactionKey . '}');\n\n  if ($token != $validtoken) {\n  $authCode = \n;\n  $responseCode = \nDECLINED\n;\n  $responseDesc = \nInvalid token\n;\n } else {\n  $authCode = '1111';\n  $responseCode = \nSUCCESS\n;\n  $responseDesc = \n;\n  switch($transactiontype) {\n   case \nVALIDATE\n:\n    // Check if merchantRef is still valid\n    break;\n   case \nCONFIRM\n:\n    // Update the paid status of the table\n    break;\n   default:\n    $responseCode = \nDECLINED\n;\n    $responseDesc = \nUnknown transaction type\n;\n  }\n }\n\n $token = sha1($transactiontype . $merchantID . $merchantRef . $authCode . $responseCode . '{' . $transactionKey . '}');\n\n //set GET variables\n $fields = array(\n    'merchantID'=\n$merchantID,\n    'merchantRef'=\n$merchantRef,\n    'amount'=\n$amount,\n    'authCode'=\n$authCode,\n    'responseCode'=\n$responseCode,\n    'responseDesc'=\n$responseDesc,\n    'token'=\n$token\n   );\n\n $params = http\\_build\\_query($fields);\n //output response\n echo \n?$params\n;\n\n //write logfile\n $myFile = \n/tmp/7-CONNECT.log\n;\n $fh = fopen($myFile, 'a') or exit();\n fwrite($fh, date('Y-m-d H:i ') . $params . \n\\n\n);\n fclose($fh);\n}\n\n\n\n\nV. Transaction Inquiry\n\n\nA. Request Parameters\n\n\nUsing HTTP Post or Get, the merchant site has to provide the 7-CONNECT Gateway with the parameters it requires for transaction inquiry.  These are:\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmerchantID\n\n\nText (15)\n\n\nYes\n\n\nMerchant's ID as provided by 7-CONNECT\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nYes\n\n\nMerchant's Reference Number\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nYes\n\n\nTransaction Security Token\nTo create this, get the SHA-1 digest of:\nmerchantRef + {transactionKey}\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nB. Response Parameters\n\n\n7-CONNECT returns a JSON-formatted string. Example response:\n\n\n{ \nmerchantID\n: \n123\n, \nmerchantRef\n: \n123\n, \npayID\n: \n123\n, \nstatus\n: \nUNPAID\n, \ntoken\n: \n123\n }\n\n\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmerchantID\n\n\nText (15)\n\n\nYes\n\n\nMerchant's ID as provided by 7-CONNECT\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nYes\n\n\nMerchant's Reference Number. If the merchant reference number is not unique, the gateway will return the first match.\n\n\n\n\n\n\npayID\n\n\nText (20)\n\n\nYes\n\n\n7-CONNECT Reference generated by the gateway\n\n\n\n\n\n\nstatus\n\n\nText\n\n\nYes\n\n\nValid values: UNPAID, PAID, POSTED, EXPIRED, ERROR\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nYes\n\n\nTransaction Security Token\nTo create this, get the SHA-1 digest of:\nmerchantRef + payID + status + {transactionKey}\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\nmessage\n\n\nText\n\n\nNo\n\n\nA description of the response\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVI. APPENDIX\n\n\nRevision History\n\n\n\n\n\n\n\n\nVersion\n\n\nDate\n\n\nRevisions\n\n\n\n\n\n\n\n\n\n\n0.1\n\n\n2011-03-02\n\n\nInitial document draft\n\n\n\n\n\n\n0.2\n\n\n2011-03-16\n\n\nAdded test plan section\n\n\n\n\n\n\n0.3\n\n\n2011-03-18\n\n\nAdded screenshots. Renamed 7-Pay ID to 7-Pay Reference.\n\n\n\n\n\n\n0.4\n\n\n2011-03-24\n\n\nAdded documentation on generating the token.\nAlso added sample php code for getting the 7-Pay Reference.\n\n\n\n\n\n\n0.5\n\n\n2011-04-06\n\n\nAdded 3 new optional fields (transactionDescription - will be shown in the customer LCD screen and payment instruction page, receiptRemarks that is printed in the receipt, and email for notifying customers of 7-Pay transactions.\nAlso added sample code for merchant web service implementation.\n\n\n\n\n\n\n0.6\n\n\n2011-04-26\n\n\nModified branding to 7-CONNECT.\n\n\n\n\n\n\n0.7\n\n\n2011-07-26\n\n\nUpdated the instruction page screenshot to include the \"Email instructions to \u2026\" button.(2.1)\nChanged receipt remarks maximum limit to 660 characters and added an example.(2.1.2)\nCorrected URL of test environment.(2.1.4)\nAdded a merchant ID parameter to the transaction inquiry (2.2 and 2.2.3) and modified the return values directly in JSON format. The previous API has been deprecated.\n\n\n\n\n\n\n0.8\n\n\n2013-01-04\n\n\nIncreased character limit of transactionDescription to 3,000 from 128 characters.\n\n\n\n\n\n\n0.9\n\n\n2013-10-07\n\n\nAdded payLoad and returnPaymentDetails in the calling parameters.\n\n\n\n\n\n\n1.1\n\n\n2014-08-04\n\n\nAdded REST style createReference service\n\n\n\n\n\n\n1.2\n\n\n2015-03-20\n\n\nSplit introduction to \"Overview\" and \"Getting Started\"\nAdded subtopic in creating payment reference\nAdded required payload parameter for CLiQQ\n\"Response Parameter\" changed to \"Parameters sent to SuccessURL or FailURL\"\nAdded description for Handling Payments\nURLs included in \"Getting Started\" Topic\nAdded CLiQQ Parameters\n\n\n\n\n\n\n1.3\n\n\n2017-12-22\n\n\nCorrected webhook parameters\n\n\n\n\n\n\n\n\nParameters sent to SuccessURL or FailURL\n\n\nThese are the parameters that will be sent depending on whether the 7-CONNECT Request was successful or not.  The parameters are:\n\n\n\n\n\n\n\n\nName\n\n\nData Type\n\n\nRequired?\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmerchantID\n\n\nText (15)\n\n\nYes\n\n\nMerchant's ID as provided by 7-CONNECT\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\nYes\n\n\nMerchant's Reference Number\n\n\n\n\n\n\namount\n\n\nNumber (12, 2)\n\n\nYes\n\n\nTransaction amount.\nFormat: XXXXXXXXXX.XX\n\n\n\n\n\n\npayID\n\n\nText (20)\n\n\nYes\n\n\n7-CONNECT Reference generated by the gateway\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nYes\n\n\nTransaction Security Token\nTo create this, get the SHA-1 digest of:\nmerchantID + merchantRef + payID + {transactionKey}\nPHP code:\n$token = sha1($merchantID . $merchantRef . $payID . '{' . $transactionKey . '}');\ntransactionKey as provided by 7-CONNECT\n\n\n\n\n\n\nmessage\n\n\nText\n\n\nNo\n\n\nError message.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCLiQQ \n\n\nCLiQQ allows customers to make a transaction by just entering the needed information \nthe merchant requires at the CLiQQ kiosk or CLiQQ mobile app. Once customer makes \nthe transaction using CLiQQ kiosk or app, CLiQQ will dispense a payment slip \ncontaining a 7-CONNECT Reference number to be presented when paying at the counter.\n\n\n\n\nProcess Flow\n\n\n\n\nRequest Parameters\n\n\nThe merchant should expect the following variables which will be passed via \n\nHTTP POST\n (with the parameters in the request content, not in the URL). \nPlease refer to the section IV-A on handling payments. The CLiQQ service \nmandates the use of payload and paymentDetails to return transaction information \nthat is entered by the customer at the kiosk or mobile app. The following \ndescribes the data that is sent to the merchant upon payment at the counter.\n\n\n\n\n\n\n\n\nVariable Name\n\n\nData Type\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nText\n\n\nCONFIRM\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\n(merchant to require use of the value)\n\n\n\n\n\n\namount\n\n\nNumber (12,2)\n\n\nTransaction amount\n\n\n\n\n\n\npayLoad\n\n\nText\n\n\nJSON-formatted string containing other relevant transaction information\nLOAD\n and \nE-PIN\nSample for load and e-pins:\n{\"mobilenumber\":\"09228792165\"}\nBILLS PAYMENT\nSample for bills payment:\n{\"account\": \"0708535737\", \"subscriber\": \"JDELACRUZ\", }\n\n\n\n\n\n\npaymentDetails\n\n\nText\n\n\nJSON-formatted string containing payment details.\nThe merchant can expect the data to be formatted this way:\n{\"payID\":\"\n7-CONNECT Reference Number\n\", \"store\":\"\n\", \"pos\":\"\n\", \"shift\":\"\n\", \"bdate\":\"\n\"}\nExample:\n{\"payID\":\"1500-1001-1002\", \"store\":\"1234\", \"pos\":\"2\", \"shift\":\"1\", \"bdate\":\"2015-02-03 06:54:04 PHT\"}\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nTransaction Security Token This value must match the \nSHA-1 digest\n of:  type +merchantID + merchantRef + {transactionKey} where:\ntype - the value of the type variable\nmerchantID - provided by 7-CONNECT\nmerchantRef - the value of the merchantRef variable\ntransactionKey  - provided by 7-CONNECT\nExample:\nSHA-1 digest of:\nCONFIRMtestmerchanttestmerchant003{628e936f45884030ac1f34bcde9c28efa6ae9c839623b45b8942bd4490e1f05d}\n = \nf46c33a0e2f35cb2321a4054ec2750f38a8f7a25\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nResponse Variable\n\n\nIn order to allow 7-CONNECT to confirm that the merchant has acknowledged the payment notification, the payment handler service must contain the following variables:\n\n\n\n\n\n\n\n\nVariable Name\n\n\nData Type\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nText\n\n\nCONFIRM\n\n\n\n\n\n\nmerchantRef\n\n\nText (40)\n\n\n(merchant to require the value)\n\n\n\n\n\n\namount\n\n\nNumber (12,2)\n\n\nTransaction amount\n\n\n\n\n\n\nauthCode\n\n\nText (20)\n\n\nMerchant-system-generated Authorization Code\n\n\n\n\n\n\nresponseCode\n\n\nText (12)\n\n\nValid values: SUCCESS, DECLINED\n\n\n\n\n\n\nresponseDesc\n\n\nText (40)\n\n\nBrief description for the response code\n\n\n\n\n\n\nremarks\n\n\nText (160)\n\n\nAny remarks from the Merchant.  This will be printed on the receipt.\n\n\n\n\n\n\ntoken\n\n\nText\n\n\nTransaction Security Token\nThis value must match the SHA-1 digest of:\ntype +merchantID + merchantRef + authCode + responseCode + {transactionKey}\n where:\ntype - the value of the type variable\nmerchantID - provided by 7-CONNECT\nmerchantRef - the value of the merchantRef variable\nauthCode - the authCode generated by the merchant\nresponseCode - the responseCode generated by the merchant\ntransactionKey  - provided by 7-CONNECT\nExample:\nSHA-1 digest of:\nCONFIRM + Kiosk_BillsPayment +837143358+ B30F3454191E + SUCCESS + {197f13e7ce767852ea56d15d8b3af9decb5c642be2dc7e5d09d588ce5b0b3590}\n=  9a96ebd5c4ef2b1d9b82fde2bb4a2d70dbbc0717\n\n\n\n\n\n\n\n\nThe payment listener should output response a simple text containing a question mark(?) along with the url encoded variables and its respected values:\n\n\nThe format is :\n\n\n?merchantID=merchantID\\_value\nmerchantRef=merchantRef\\_value\namount=amount\\_value\nauthCode=authCode\\_value\nresponseCode=responseCode\\_value\nresponseDesc=responseDesc\\_value\ntoken=token\\_value\n\n\n\n\nSamples are :\n\n\nFor DECLINED :\n\n\n?merchantID=kioskload\nmerchantRef=\namount=\nauthCode=\nresponseCode=DECLINED\nresponseDesc=DONT LEAVE ANY FIELDS BLANK\ntoken=fe1047606531ebdbe00d1786c80c3ca7e54ce79a\n\n\n\n\nFor SUCCESS :\n\n\n?merchantID=kioskload\nmerchantRef=topup01\namount=2500\nauthCode=1040249589\nresponseCode=SUCCESS\nresponseDesc=SUCCESSFUL\ntoken=7a1b6c2212e92b2ba1a2ba2d7db4031a93086d0c\n\n\n\n\nTest Plan\n\n\nObjective\n\n\nTo test the ability of the 7-CONNECT Gateway to generate a 7-CONNECT Reference and then post the transaction to the Merchant Server\n\n\nActivities:\n\n\n\n\n\n\n\n\nStep\n\n\nIn-Charge\n\n\nActivity\n\n\n\n\n\n\n\n\n\n\n1\n\n\n7-Eleven\n\n\nProvide merchant with account in the 7-CONNECT Test Environment\nTest Environment URL: \nhttps://testpay.cliqq.net\n\n\n\n\n\n\n2\n\n\nMerchant\n\n\nProvide 7 - Eleven with postback URL for test environment\nCreate transactions using 7-CONNECT as the payment option\n\n\n\n\n\n\n3\n\n\n7-Eleven\n\n\nConfigure 7-CONNECT to accomodate test postback URL\nSimulate payments for created transactions\n\n\n\n\n\n\n4\n\n\n7-Eleven\n\n\nProvide merchant with account in the 7-CONNECT Production Environment\nProduction Environment URL: [https://pay.7-eleven.com.ph] (https://pay.7-eleven.com.ph)\n\n\n\n\n\n\n5\n\n\nMerchant\n\n\nProvide 7-Eleven with postback URL for the production environment\nConfigure code with accordance to production transaction key\n\n\n\n\n\n\n6\n\n\n7-Eleven\n\n\nConfigure 7-CONNECT to accomodate production postback URL\n\n\n\n\n\n\n\n\nTransaction Status\n\n\n\n\n\n\n\n\nStatus\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nPENDING\n\n\nA transaction waiting to be paid\n\n\n\n\n\n\nEXPIRED\n\n\nCustomer was not able to use the 7-CONNECT Reference Number during time that 7-CONNECT Reference Number is still valid. When attempting to pay for an expired transaction, the POS will declinethe reference number and it cannot be paid. The amount of days can be modified by 7-Eleven when requested by the merchant. Default expiration of 7-CONNECT Reference is 2 days.\n\n\n\n\n\n\nPOSTED\n\n\nA successfully paid transaction. This status indicates a successful posting of payment to the merchant site.\n\n\n\n\n\n\nSTIP\n\n\nWhen a transaction is paid, it is inserted in a queue called STIP. Every 10 minutes 7-CONNECT will attempt to communicate to the merchant site for a payment posting. If successful, the transaction status will become POSTED. If after 10 tries and no successful posting occurs then the transaction will remain STIP. A transaction with an STIP status can be POSTED in 2 ways. First, by manually sending a post request to the merchant site ( this is done by a 7-Eleven admin). Second, it can be manually changed in the 7-CONNECT database, this method does not post to the merchant so no payment confirmation will occur.\n\n\n\n\n\n\nDECLINED\n\n\nTransaction has been declined by the merchant. This will likely happen if the merchant accepts the transaction during validation but declined it during the confirm call.\n\n\n\n\n\n\n\n\nAssets\n\n\nYou may use the following graphics to communicate to buyers that you accept 7-CONNECT. These are logos designed for use on your home page and in your checkout page. Using the 7-Eleven logo will allow your customers to easily recognize that payment can be made at any 7-Eleven store.\n\n\n250 px : \n \n\n \n\n \n\n\nThis photo shows how you can present the 7-CONNECT option in the payment method of your website. Use the text \u201cPay at any 7-Eleven store\u201d or \u201cPay at 7-Eleven\u201d to describe the 7-CONNECT payment option.", 
            "title": "Home"
        }, 
        {
            "location": "/#7-connect-merchant-integration-guide", 
            "text": "Copyright 2011, Philippine Seven Corporation and affiliates. All rights reserved.  The information contained in this document is confidential and intended for merchants who will be integrating to the 7-CONNECT gateway. Copying and distribution of this document to unauthorized parties is prohibited.  The information contained herein is subject to change without notice and is not warranted to be error-free. If you find any errors, please report them to us in writing.", 
            "title": "7-CONNECT Merchant Integration Guide"
        }, 
        {
            "location": "/#i-overview", 
            "text": "Welcome to the 7-CONNECT Merchant Integration Guide.  7-CONNECT is 7-Eleven's platform for e-commerce businesses that enables cash payment convenience for your customers. Customers will be able to pay for online purchases at any 7-Eleven store.  7-CONNECT features the following:   24/7 cash payment at all 7-Eleven stores  Increases your market beyond credit card holders  Easier and faster than bank deposits  Zero risk of fraud and chargebacks  Real time notification of payment to your transaction systems   As a merchant, you will have access to new customers who do not have credit cards or who refuse to use them online. This opens up opportunities for you. There are no chargebacks or fraud to worry about. All completed transactions are guaranteed to be remitted to you.", 
            "title": "I. Overview"
        }, 
        {
            "location": "/#ii-getting-started", 
            "text": "This guide assumes you have a working knowledge of the following:   HTTP and webservice concepts  SHA-1 hashing   Integrating to 7-CONNECT will require development of two points:   7-CONNECT Reference Request: You will need to request for a 7-CONNECT Reference which will be used by customers to pay at the store.  Merchant Webhook: The 7-CONNECT gateway will call your URL to  VALIDATE  (optional) and  CONFIRM  (mandatory) a payment transaction.   These URLs will be used:   For Testing -  https://testpay.cliqq.net/transact  For Live Production -  https://pay.7-eleven.com.ph/transact   For graphic logos that you can use, jump to  Assets", 
            "title": "II. Getting Started"
        }, 
        {
            "location": "/#iii-7-connect-web-services", 
            "text": "", 
            "title": "III. 7-CONNECT Web Services"
        }, 
        {
            "location": "/#a-7-connect-reference", 
            "text": "7-CONNECT Reference is a 12-digit number issued by the 7-CONNECT gateway. This reference number will be presented at the store in order to transact customer's purchase under 7-CONNECT. You may use either a redirect page or an API request to obtain this reference number.", 
            "title": "A. 7-CONNECT Reference"
        }, 
        {
            "location": "/#1a-creating-a-payment-reference-via-redirect-page", 
            "text": "After customer checks out and chooses 7-CONNECT as a payment option, merchant will send a request to generate a reference number. They will be then automatically redirected to the payment instruction page. This means that merchants don't have to create a payment instruction page.  The payment instruction page contains the transaction details and the 7-CONNECT reference number issued for the transaction.  Illustration   Customer Experience   Customer selects  7-CONNECT  as Payment Mode in Checkout.  Merchant Site redirects user to the 7-CONNECT REQUEST URL with the required parameters.  7-CONNECT Gateway displays the following instruction page displaying the Merchant details and the 7-CONNECT Reference.    At this point, the Customer can:   a. Write down the 7-CONNECT Reference  b. Print the page \n    Customer selects  Continue Browsing . \n    7-CONNECT Gateway redirects to the Merchant's Success URL. \n    Merchant Site displays the Order Confirmation page.", 
            "title": "1A. Creating a payment reference via redirect page"
        }, 
        {
            "location": "/#request-parameters", 
            "text": "The merchant site has to provide the 7-CONNECT Request URL with the parameters it requires to generate a 7-CONNECT Reference.  You will be provided with your own Merchant ID and Transaction Key after completing the merchant agreement.  Request Type: HTTP POST\nContent-Type: application/x-www-form-urlencoded \nParameters: query string  Request Type: HTTP GET\nParameters: query string     Name  Data Type  Required?  Description      merchantID  Text (15)  Required  Merchant's ID as provided by 7-CONNECT    merchantRef  Text (40)  Required  Merchant's Reference Number    amount  Number (12, 2)  Required  Transaction amount. Format: XXXXXXXXXX.XX    expDate  Text (14)  Optional  Transaction's expiration date/time. Format: yyyyMMddHHmmss If not specified, blank or malformed, the expiry date is set to the value defined in the merchant settings which is 2880 minutes.    successURL  Text (300)  Required  The page to which 7-CONNECT redirects to after the user clicks on the Continue Browsing button.    failURL  Text (300)  Required  The page to which 7-CONNECT redirects to after a failed transaction.    token  Text  Required  Transaction Security Token To create this, get the SHA-1 digest of: merchantID + merchantRef + {transactionKey} PHP code: *$token = sha1($merchantID . $merchantRef . '{' . $transactionKey . '}'); transactionKey as provided by 7-CONNECT    transactionDescription  Text(3000)  Optional  Will be shown in the customer LCD screen and payment instruction page (max of 3000 characters)    receiptRemarks  Text(660)  Optional  Will be printed in the receipt (if none, defaults to {merchantID} {merchantRef}) (max of 660 characters). Use the   characters to instruct a new line.  The width of the receipt is 32 characters. Excess characters in a line will be truncated in the receipt.  Example:  \"John Santos 789 E. Rodriguez St. Call 777-7890 for questions Expected delivery date: 7/4/11\"  This will be rendered on the receipt as:  John Santos 789  E. Rodriguez St. Call 777-7890 for questions  Expected delivery date: 7/4/11    email  Text  Optional  Used for notifications from 7-CONNECT to the customer. If not provided by the merchant, a button will appear in the instruction page to allow the customer to enter their email address.    phone  Text  Optional  Used for customer service. Format:  09xxxxxxxxx    payLoad  Text (3000)  Optional for website only integration.  Required if service is available through CLiQQ  This field can be set to other relevant transaction information that will be passed to the merchant's postback URL (e.g. Account Number, Customer Contact Number, etc.). This field is needed since the 7\u00adConnect reference number may be generated by another device. That device will generate the payLoad contents and the payLoad contents will then be passed to the merchant's postback URL upon transaction payment.  If merchant plans to integrate with CLiQQ, this will be  REQUIRED.  This will contain details of the transaction provided by the customer.    returnPaymentDetails  Text (1)  Optional  Value can either be Y or N or blank. If the value is Y, the gateway will include the paymentDetails when posting to the merchant postback URL when payment is made at the store.           Sample Code  This php code will display a form asking for a merchant reference and amount. Submitting this will display the payment instruction page containing the 7-CONNECT Reference.  transact.php  ?php\n\nif (isset($\\_REQUEST['submit'])) {\n $merchantRef = $\\_REQUEST['merchantRef'];\n $amount = $\\_REQUEST['amount'];\n\n if (!is\\_numeric($amount)) {\n  $errormsg =  Invalid amount. ;\n }\n $transactURL = 'https://testpay.cliqq.net/transact';\n $inquireURL = 'https://testpay.cliqq.net/inquire';\n $transactionKey = '628e936f45884030ac1f34bcde9c28efa6ae9c839623b45b8942bd4490e1f05d';\n $merchantID = '7-Eleven';\n $successURL = $\\_SERVER['SERVER\\_NAME'];\n $failURL = $\\_SERVER['SERVER\\_NAME'];\n $token = sha1($merchantID . $merchantRef . '{' . $transactionKey . '}');\n\n //set variables\n $fields = array(\n\n    'merchantID'= $merchantID,\n    'merchantRef'= $merchantRef,\n    'amount'= $amount,\n    'successURL'= $successURL,\n    'failURL'= $failURL,\n    'token'= $token\n   );\n\n $params = http\\_build\\_query($fields);\n header( Location: $transactURL?$params );\n}\n\nif (isset($error)) {\n echo  Invalid Amount. Please enter again. ;\n}\n?  h1 7-CONNECT Test Request /h1  form method= post  table  tr  td Merchant Reference: /td  td input type= text  name= merchantRef /td  /tr  tr  td Amount: /td  td input type= text  name= amount /td /tr  tr  td input type= submit  name= submit  value= Submit to 7-CONNECT /td  /tr  /table  /form", 
            "title": "Request Parameters"
        }, 
        {
            "location": "/#1b-creation-of-payment-reference-over-a-web-service", 
            "text": "This allows more control on how payment instruction is displayed to customers. Merchant will display the payment instructions that include the 7-CONNECT Reference Number. We recommend the following format:   Payment instructions  7-CONNECT REFERENCE: (human readable with hyphens xxxx-xxxx-xxxx)  Amount:  Barcode in Code 128A format (numeric only; strip away hyphens)  Expiry:  Merchant Name:  Merchant Reference:  Transaction Description:   This is a web service that receives an  HTTP POST  request and returns a JSON response. Sends the specified data in a POST request to the  HTTP server, in the same way that a browser does when a user has filled in an HTML form and presses the submit button. This will cause curl to pass the data to the server using the content-type application/x-www-form-urlencoded.", 
            "title": "1B. Creation of payment reference over a web service"
        }, 
        {
            "location": "/#request-parameters_1", 
            "text": "Name  Data Type  Required?  Description      merchantID  Text (15)  Required  Merchant's ID as provided by 7-CONNECT    merchantRef  Text (40)  Required  Merchant's Reference Number    amount  Number (12, 2)  Required  Transaction amount. Format: XXXXXXXXXX.XX    expDate  Number (14)  Optional  Transaction's expiration date/time. Format: yyyyMMddHHmmss If not specified, blank or malformed, the expiry date is set to the value defined in the merchant settings which is 2880 minutes.    successURL  Text (300)  Required  The page to which 7-CONNECT redirects to after the user clicks on the Continue Browsing button.    failURL  Text (300)  Required  The page to which 7-CONNECT redirects to after a failed transaction.    token  Text  Required  Transaction Security Token To create this, get the SHA-1 digest of: merchantID + merchantRef + {transactionKey} PHP code: $token = sha1($merchantID . $merchantRef . '{' . $transactionKey . '}'); transactionKey as provided by 7-CONNECT    transactionDescription  Text(3000)  Optional  Will be shown in the customer LCD screen and payment instruction page (max of 3000 characters)    receiptRemarks  Text(660)  Optional  Will be printed in the receipt (if none, defaults to {merchantID} {merchantRef} (max of 660 characters). Use the pipe character to instruct a new line.  The width of the receipt is 32 characters. Excess characters in a line will be truncated in the receipt.  Example:  \"John Santos 789 E. Rodriguez St. Call 777-7890 for questions Expected delivery date: 7/4/11\"  This will be rendered on the receipt as:  John Santos  789 E. Rodriguez St.  Call 777-7890 for questions  Expected delivery date: 7/4/11    email  Text  Optional  Used for notifications from 7-CONNECT to the customer. If not provided by the merchant, a button will appear in the instruction page to allow the customer to enter their email address.    payLoad  Text (3000)  Optional for website only integration.  Required if service is available through CLiQQ  This field can be set to other relevant transaction information that will be passed to the merchant's postback URL (e.g. Account Number, Customer Contact Number, etc.). This field is needed since the 7\u00adConnect reference number may be generated by another device. That device will generate the payLoad contents and the payLoad contents will then be passed to the merchant's postback URL upon transaction payment. If merchant plans to integrate with CLiQQ, this will be  REQUIRED.  This will contain details of the transaction provided by the customer.    returnPaymentDetails  Text (1)  Optional  Value can either be Y or N or blank. If the value is Y, the gateway will include the paymentDetails when posting to the merchant postback URL when payment is made at the store.", 
            "title": "Request Parameters"
        }, 
        {
            "location": "/#response", 
            "text": "Name  Data Type  Required?  Description      merchantID  Text (15)  Yes  Merchant's ID as provided by 7-CONNECT    merchantRef  Text (40)  Yes  Merchant's Reference Number    amount  Number (12,2)  Yes  Transaction amount. Format: XXXXXXXXXX.XX    payID  Text (20)  Yes  7-CONNECT Reference generated by the gateway    token  Text  Yes  Transaction Security Token To create this, get the SHA-1 digest of: merchantID+merchantRef+payID+{transactionKey} PHP code: $token = sha1($merchantID) . $merchantRef . $payID . '{'.$transactionKey . '}'); transactionKey as provided by 7-CONNECT    message  Text  No  Error Message     Sample Code  https://testpay.cliqq.net/v1/reference/  INPUT: merchantID, merchantRef, amount, token and other optional fields in the document.  -d  merchantID=ATI  \\\n-d  merchantRef=6419705015  \\\n-d  amount=100  \\\n-d  token=235a23122139152ff830aa7fa1a876a95d4e365b  \\\n-d  email= [jpj@example.com](mailto:jpj@example.com)  \\\n-d  expDate=20140730235959  \\\n-d  receiptRemarks=ATI |^MerchRef: 6419705015  \\\n-d  returnPaymentDetails=Return payment details here.  \\\n-d  transactionDescription=Transaction description here.  \\\n-d  payLoad=payLoad.  \\  OUTPUT: payID, merchantID, merchantRef, amount, expiryDate, token, message  curl \\\n-d  merchantID=ATI  \\\n-d  merchantRef=6419705015  \\\n-d  amount=100  \\\n-d  token=235a23122139152ff830aa7fa1a876a95d4e365b  \\\n-d  email= [jpjamon@gmail.com](mailto:jpjamon@gmail.com)  \\\n-d  expDate=20140730235959  \\\n-d  receiptRemarks=ATI |MerchRef: 6419705015  \\\n-d  returnPaymentDetails=Return payment details here.  \\\n-d  transactionDescription=Transaction description here.  \\\n-d  payLoad=payLoad.  \\", 
            "title": "Response"
        }, 
        {
            "location": "/#iv-merchant-web-services-webhooks", 
            "text": "", 
            "title": "IV. Merchant Web Services (Webhooks)"
        }, 
        {
            "location": "/#a-handling-payments", 
            "text": "Merchants should prepare a Payment Handler to process payment postings that were paid at the store. When a POS payment event is triggered, we\u2019ll send a HTTP POST payload to the webhook\u2019s configured URL. Your Payment Handler will then proceed to fulfill the customer's order by updating transaction records or balances and sending a voucher or e-ticket by email or SMS to the customer.   7-CONNECT requires its merchants to have the following web services:  VALIDATE (mandatory)  This is used to verify the validity of a given Merchant Reference Number. Validate function can also be used for amount checking, account number validity, expiration checking, inventory availability and uptime inquiry.  CONFIRM (mandatory)  This is used to confirm the payment for a given Merchant Reference Number. Once a confirm request was processed by the merchant, it should reject the other confirm request sent with the same sevenConnectId.  Communication will be done using  HTTP POST", 
            "title": "A. Handling Payments"
        }, 
        {
            "location": "/#request-parameters_2", 
            "text": "Name  Data Type  Required?  Description      sevenConnectId  Text  Yes  XXXX-XXXX-XXXX    type  Text  Yes  Valid values: VALIDATE, CONFIRM    merchantRef  Text (40)  Yes  Merchant's Reference Number    amount  Number (12, 2)  Yes  Transaction Amount Format: XXXXXXXXXX.XX    token  Text  Yes  Transaction Security Token To create this, get the SHA-1 digest of: type +merchantID + merchantRef + {transactionKey} transactionKey as provided by 7-CONNECT    payLoad  Text (3000)  Optional  For transactions originating from CLiQQ, there will be a JSON value in this parameter. See  CLiQQ Appendix  for details.    paymentDetails  Text  Optional  Merchant will specify if they will require payment details. If 'N' or no value was passed to the parameter returnPaymentDetails during the 7\u00adConnect reference generation, then this parameter will not be passed to the postback URL. This field is the JSON\u00adformatted string containing payment details formatted this way: {\"payID\":\"9913-0850-0305\", \"store\":\"0189\", \"pos\":\"1\", \"shift\":\"1\", \"bdate\":\"20130312000000\"}", 
            "title": "Request Parameters"
        }, 
        {
            "location": "/#response_1", 
            "text": "Name  Data Type  Required?  Description      type  Text  Yes  Valid values: VALIDATE, CONFIRM    merchantRef  Text (40)  Yes  Merchant's Reference Number    amount  Number (12, 2)  Yes  Transaction Amount Format: XXXXXXXXXX.XX    authCode  Text (20)  Yes for Confirm No for Validate  Merchant-system-generated Authorization Code    responseCode  Text (12)  Yes  Valid values: SUCCESS, DECLINED    responseDesc  Text (40)  No  Details for the success or declined transaction.    remarks  Text (160)  No  Any remarks from the Merchant.  This will be printed on the receipt.    token  Text  Yes  Transaction Security Token To create this for  VALIDATE  call, get the SHA-1 digest of: type + merchantID + merchantRef + responseCode + {transactionKey} To create this for  CONFIRM  call, get the SHA-1 digest of: type + merchantID + merchantRef + authCode + responseCode + {transactionKey} transactionKey as provided by 7-CONNECT           The format is :  ?type=CONFIRM merchantID=merchantID_value merchantRef=merchantRef_value amount=amount_value authCode=authCode_value responseCode=responseCode_value responseDesc=responseDesc_value token=token_value  Samples are :  For DECLINED :  ?type=CONFIRM merchantRef= amount= authCode= responseCode=DECLINED responseDesc=DONT LEAVE ANY FIELDS BLANK token=fe1047606531ebdbe00d1786c80c3ca7e54ce79a  For SUCCESS :  ?type=CONFIRM merchantRef=testmerchant01 amount=2500 authCode=1040249589 responseCode=SUCCESS responseDesc=SUCCESSFUL token=7a1b6c2212e92b2ba1a2ba2d7db4031a93086d0c  Sample Code  The following php code implements the merchant service that will handle VALIDATE and CONFIRM instructions coming from the 7-CONNECT gateway.  ?php\n\n/* This is the verification service that listens to payment transactions from the gateway. */\n\nif (isset($\\_REQUEST['type'])) {\n $transactiontype = $\\_REQUEST['type'];\n $merchantRef = $\\_REQUEST['merchantRef'];\n $amount = $\\_REQUEST['amount'];\n $token = $\\_REQUEST['token'];\n\n // Check if token is valid\n // Replace merchantID with your merchant ID\n $transactionKey = '7ede208b7f8a58573057e7dde57fe8f3969fe0b2c32149c36b8c29ae9f744274';\n $merchantID = 'TestMerchant01';\n $validtoken = sha1($transactiontype . $merchantID . $merchantRef . '{' . $transactionKey . '}');\n\n  if ($token != $validtoken) {\n  $authCode =  ;\n  $responseCode =  DECLINED ;\n  $responseDesc =  Invalid token ;\n } else {\n  $authCode = '1111';\n  $responseCode =  SUCCESS ;\n  $responseDesc =  ;\n  switch($transactiontype) {\n   case  VALIDATE :\n    // Check if merchantRef is still valid\n    break;\n   case  CONFIRM :\n    // Update the paid status of the table\n    break;\n   default:\n    $responseCode =  DECLINED ;\n    $responseDesc =  Unknown transaction type ;\n  }\n }\n\n $token = sha1($transactiontype . $merchantID . $merchantRef . $authCode . $responseCode . '{' . $transactionKey . '}');\n\n //set GET variables\n $fields = array(\n    'merchantID'= $merchantID,\n    'merchantRef'= $merchantRef,\n    'amount'= $amount,\n    'authCode'= $authCode,\n    'responseCode'= $responseCode,\n    'responseDesc'= $responseDesc,\n    'token'= $token\n   );\n\n $params = http\\_build\\_query($fields);\n //output response\n echo  ?$params ;\n\n //write logfile\n $myFile =  /tmp/7-CONNECT.log ;\n $fh = fopen($myFile, 'a') or exit();\n fwrite($fh, date('Y-m-d H:i ') . $params .  \\n );\n fclose($fh);\n}", 
            "title": "Response"
        }, 
        {
            "location": "/#v-transaction-inquiry", 
            "text": "", 
            "title": "V. Transaction Inquiry"
        }, 
        {
            "location": "/#a-request-parameters", 
            "text": "Using HTTP Post or Get, the merchant site has to provide the 7-CONNECT Gateway with the parameters it requires for transaction inquiry.  These are:     Name  Data Type  Required?  Description      merchantID  Text (15)  Yes  Merchant's ID as provided by 7-CONNECT    merchantRef  Text (40)  Yes  Merchant's Reference Number    token  Text  Yes  Transaction Security Token To create this, get the SHA-1 digest of: merchantRef + {transactionKey} transactionKey as provided by 7-CONNECT", 
            "title": "A. Request Parameters"
        }, 
        {
            "location": "/#b-response-parameters", 
            "text": "7-CONNECT returns a JSON-formatted string. Example response:  {  merchantID :  123 ,  merchantRef :  123 ,  payID :  123 ,  status :  UNPAID ,  token :  123  }     Name  Data Type  Required?  Description      merchantID  Text (15)  Yes  Merchant's ID as provided by 7-CONNECT    merchantRef  Text (40)  Yes  Merchant's Reference Number. If the merchant reference number is not unique, the gateway will return the first match.    payID  Text (20)  Yes  7-CONNECT Reference generated by the gateway    status  Text  Yes  Valid values: UNPAID, PAID, POSTED, EXPIRED, ERROR    token  Text  Yes  Transaction Security Token To create this, get the SHA-1 digest of: merchantRef + payID + status + {transactionKey} transactionKey as provided by 7-CONNECT    message  Text  No  A description of the response", 
            "title": "B. Response Parameters"
        }, 
        {
            "location": "/#vi-appendix", 
            "text": "", 
            "title": "VI. APPENDIX"
        }, 
        {
            "location": "/#revision-history", 
            "text": "Version  Date  Revisions      0.1  2011-03-02  Initial document draft    0.2  2011-03-16  Added test plan section    0.3  2011-03-18  Added screenshots. Renamed 7-Pay ID to 7-Pay Reference.    0.4  2011-03-24  Added documentation on generating the token. Also added sample php code for getting the 7-Pay Reference.    0.5  2011-04-06  Added 3 new optional fields (transactionDescription - will be shown in the customer LCD screen and payment instruction page, receiptRemarks that is printed in the receipt, and email for notifying customers of 7-Pay transactions. Also added sample code for merchant web service implementation.    0.6  2011-04-26  Modified branding to 7-CONNECT.    0.7  2011-07-26  Updated the instruction page screenshot to include the \"Email instructions to \u2026\" button.(2.1) Changed receipt remarks maximum limit to 660 characters and added an example.(2.1.2) Corrected URL of test environment.(2.1.4) Added a merchant ID parameter to the transaction inquiry (2.2 and 2.2.3) and modified the return values directly in JSON format. The previous API has been deprecated.    0.8  2013-01-04  Increased character limit of transactionDescription to 3,000 from 128 characters.    0.9  2013-10-07  Added payLoad and returnPaymentDetails in the calling parameters.    1.1  2014-08-04  Added REST style createReference service    1.2  2015-03-20  Split introduction to \"Overview\" and \"Getting Started\" Added subtopic in creating payment reference Added required payload parameter for CLiQQ \"Response Parameter\" changed to \"Parameters sent to SuccessURL or FailURL\" Added description for Handling Payments URLs included in \"Getting Started\" Topic Added CLiQQ Parameters    1.3  2017-12-22  Corrected webhook parameters", 
            "title": "Revision History"
        }, 
        {
            "location": "/#parameters-sent-to-successurl-or-failurl", 
            "text": "These are the parameters that will be sent depending on whether the 7-CONNECT Request was successful or not.  The parameters are:     Name  Data Type  Required?  Description      merchantID  Text (15)  Yes  Merchant's ID as provided by 7-CONNECT    merchantRef  Text (40)  Yes  Merchant's Reference Number    amount  Number (12, 2)  Yes  Transaction amount. Format: XXXXXXXXXX.XX    payID  Text (20)  Yes  7-CONNECT Reference generated by the gateway    token  Text  Yes  Transaction Security Token To create this, get the SHA-1 digest of: merchantID + merchantRef + payID + {transactionKey} PHP code: $token = sha1($merchantID . $merchantRef . $payID . '{' . $transactionKey . '}'); transactionKey as provided by 7-CONNECT    message  Text  No  Error message.", 
            "title": "Parameters sent to SuccessURL or FailURL"
        }, 
        {
            "location": "/#cliqq", 
            "text": "CLiQQ allows customers to make a transaction by just entering the needed information \nthe merchant requires at the CLiQQ kiosk or CLiQQ mobile app. Once customer makes \nthe transaction using CLiQQ kiosk or app, CLiQQ will dispense a payment slip \ncontaining a 7-CONNECT Reference number to be presented when paying at the counter.", 
            "title": "CLiQQ "
        }, 
        {
            "location": "/#process-flow", 
            "text": "", 
            "title": "Process Flow"
        }, 
        {
            "location": "/#request-parameters_3", 
            "text": "The merchant should expect the following variables which will be passed via  HTTP POST  (with the parameters in the request content, not in the URL). \nPlease refer to the section IV-A on handling payments. The CLiQQ service \nmandates the use of payload and paymentDetails to return transaction information \nthat is entered by the customer at the kiosk or mobile app. The following \ndescribes the data that is sent to the merchant upon payment at the counter.     Variable Name  Data Type  Description      type  Text  CONFIRM    merchantRef  Text (40)  (merchant to require use of the value)    amount  Number (12,2)  Transaction amount    payLoad  Text  JSON-formatted string containing other relevant transaction information LOAD  and  E-PIN Sample for load and e-pins: {\"mobilenumber\":\"09228792165\"} BILLS PAYMENT Sample for bills payment: {\"account\": \"0708535737\", \"subscriber\": \"JDELACRUZ\", }    paymentDetails  Text  JSON-formatted string containing payment details. The merchant can expect the data to be formatted this way: {\"payID\":\" 7-CONNECT Reference Number \", \"store\":\" \", \"pos\":\" \", \"shift\":\" \", \"bdate\":\" \"} Example: {\"payID\":\"1500-1001-1002\", \"store\":\"1234\", \"pos\":\"2\", \"shift\":\"1\", \"bdate\":\"2015-02-03 06:54:04 PHT\"}    token  Text  Transaction Security Token This value must match the  SHA-1 digest  of:  type +merchantID + merchantRef + {transactionKey} where: type - the value of the type variable merchantID - provided by 7-CONNECT merchantRef - the value of the merchantRef variable transactionKey  - provided by 7-CONNECT Example: SHA-1 digest of: CONFIRMtestmerchanttestmerchant003{628e936f45884030ac1f34bcde9c28efa6ae9c839623b45b8942bd4490e1f05d}  =  f46c33a0e2f35cb2321a4054ec2750f38a8f7a25", 
            "title": "Request Parameters"
        }, 
        {
            "location": "/#response-variable", 
            "text": "In order to allow 7-CONNECT to confirm that the merchant has acknowledged the payment notification, the payment handler service must contain the following variables:     Variable Name  Data Type  Description      type  Text  CONFIRM    merchantRef  Text (40)  (merchant to require the value)    amount  Number (12,2)  Transaction amount    authCode  Text (20)  Merchant-system-generated Authorization Code    responseCode  Text (12)  Valid values: SUCCESS, DECLINED    responseDesc  Text (40)  Brief description for the response code    remarks  Text (160)  Any remarks from the Merchant.  This will be printed on the receipt.    token  Text  Transaction Security Token This value must match the SHA-1 digest of: type +merchantID + merchantRef + authCode + responseCode + {transactionKey}  where: type - the value of the type variable merchantID - provided by 7-CONNECT merchantRef - the value of the merchantRef variable authCode - the authCode generated by the merchant responseCode - the responseCode generated by the merchant transactionKey  - provided by 7-CONNECT Example: SHA-1 digest of: CONFIRM + Kiosk_BillsPayment +837143358+ B30F3454191E + SUCCESS + {197f13e7ce767852ea56d15d8b3af9decb5c642be2dc7e5d09d588ce5b0b3590} =  9a96ebd5c4ef2b1d9b82fde2bb4a2d70dbbc0717     The payment listener should output response a simple text containing a question mark(?) along with the url encoded variables and its respected values:  The format is :  ?merchantID=merchantID\\_value merchantRef=merchantRef\\_value amount=amount\\_value authCode=authCode\\_value responseCode=responseCode\\_value responseDesc=responseDesc\\_value token=token\\_value  Samples are :  For DECLINED :  ?merchantID=kioskload merchantRef= amount= authCode= responseCode=DECLINED responseDesc=DONT LEAVE ANY FIELDS BLANK token=fe1047606531ebdbe00d1786c80c3ca7e54ce79a  For SUCCESS :  ?merchantID=kioskload merchantRef=topup01 amount=2500 authCode=1040249589 responseCode=SUCCESS responseDesc=SUCCESSFUL token=7a1b6c2212e92b2ba1a2ba2d7db4031a93086d0c", 
            "title": "Response Variable"
        }, 
        {
            "location": "/#test-plan", 
            "text": "", 
            "title": "Test Plan"
        }, 
        {
            "location": "/#objective", 
            "text": "To test the ability of the 7-CONNECT Gateway to generate a 7-CONNECT Reference and then post the transaction to the Merchant Server  Activities:     Step  In-Charge  Activity      1  7-Eleven  Provide merchant with account in the 7-CONNECT Test Environment Test Environment URL:  https://testpay.cliqq.net    2  Merchant  Provide 7 - Eleven with postback URL for test environment Create transactions using 7-CONNECT as the payment option    3  7-Eleven  Configure 7-CONNECT to accomodate test postback URL Simulate payments for created transactions    4  7-Eleven  Provide merchant with account in the 7-CONNECT Production Environment Production Environment URL: [https://pay.7-eleven.com.ph] (https://pay.7-eleven.com.ph)    5  Merchant  Provide 7-Eleven with postback URL for the production environment Configure code with accordance to production transaction key    6  7-Eleven  Configure 7-CONNECT to accomodate production postback URL", 
            "title": "Objective"
        }, 
        {
            "location": "/#transaction-status", 
            "text": "Status  Description      PENDING  A transaction waiting to be paid    EXPIRED  Customer was not able to use the 7-CONNECT Reference Number during time that 7-CONNECT Reference Number is still valid. When attempting to pay for an expired transaction, the POS will declinethe reference number and it cannot be paid. The amount of days can be modified by 7-Eleven when requested by the merchant. Default expiration of 7-CONNECT Reference is 2 days.    POSTED  A successfully paid transaction. This status indicates a successful posting of payment to the merchant site.    STIP  When a transaction is paid, it is inserted in a queue called STIP. Every 10 minutes 7-CONNECT will attempt to communicate to the merchant site for a payment posting. If successful, the transaction status will become POSTED. If after 10 tries and no successful posting occurs then the transaction will remain STIP. A transaction with an STIP status can be POSTED in 2 ways. First, by manually sending a post request to the merchant site ( this is done by a 7-Eleven admin). Second, it can be manually changed in the 7-CONNECT database, this method does not post to the merchant so no payment confirmation will occur.    DECLINED  Transaction has been declined by the merchant. This will likely happen if the merchant accepts the transaction during validation but declined it during the confirm call.", 
            "title": "Transaction Status"
        }, 
        {
            "location": "/#assets", 
            "text": "You may use the following graphics to communicate to buyers that you accept 7-CONNECT. These are logos designed for use on your home page and in your checkout page. Using the 7-Eleven logo will allow your customers to easily recognize that payment can be made at any 7-Eleven store.  250 px :         This photo shows how you can present the 7-CONNECT option in the payment method of your website. Use the text \u201cPay at any 7-Eleven store\u201d or \u201cPay at 7-Eleven\u201d to describe the 7-CONNECT payment option.", 
            "title": "Assets"
        }
    ]
}